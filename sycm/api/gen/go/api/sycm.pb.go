// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/sycm.proto

package sycm

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CookieReq struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Account              string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CookieReq) Reset()         { *m = CookieReq{} }
func (m *CookieReq) String() string { return proto.CompactTextString(m) }
func (*CookieReq) ProtoMessage()    {}
func (*CookieReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_774ac69513e979c1, []int{0}
}
func (m *CookieReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CookieReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CookieReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CookieReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookieReq.Merge(m, src)
}
func (m *CookieReq) XXX_Size() int {
	return m.Size()
}
func (m *CookieReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CookieReq.DiscardUnknown(m)
}

var xxx_messageInfo_CookieReq proto.InternalMessageInfo

func (m *CookieReq) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *CookieReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CookieReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type CookieRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CookieRes) Reset()         { *m = CookieRes{} }
func (m *CookieRes) String() string { return proto.CompactTextString(m) }
func (*CookieRes) ProtoMessage()    {}
func (*CookieRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_774ac69513e979c1, []int{1}
}
func (m *CookieRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CookieRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CookieRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CookieRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookieRes.Merge(m, src)
}
func (m *CookieRes) XXX_Size() int {
	return m.Size()
}
func (m *CookieRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CookieRes.DiscardUnknown(m)
}

var xxx_messageInfo_CookieRes proto.InternalMessageInfo

func (m *CookieRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CookieRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CookieRes) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*CookieReq)(nil), "api.CookieReq")
	proto.RegisterType((*CookieRes)(nil), "api.CookieRes")
}

func init() { proto.RegisterFile("api/sycm.proto", fileDescriptor_774ac69513e979c1) }

var fileDescriptor_774ac69513e979c1 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xb1, 0x4a, 0x33, 0x41,
	0x10, 0xc7, 0xbf, 0x4d, 0xbe, 0x44, 0x6e, 0x83, 0x41, 0x56, 0x09, 0x47, 0x90, 0x43, 0xae, 0x12,
	0xc1, 0x5b, 0xd0, 0xce, 0x46, 0x31, 0x85, 0x95, 0x4d, 0xd2, 0xd9, 0xc8, 0x66, 0x33, 0x59, 0x97,
	0x24, 0x37, 0xe7, 0xee, 0x44, 0xb1, 0xf5, 0x15, 0xb4, 0xf0, 0x91, 0x2c, 0x05, 0x5f, 0x40, 0xa2,
	0x0f, 0x22, 0xb7, 0x97, 0x44, 0xec, 0xec, 0xe6, 0x37, 0x37, 0xf7, 0x5b, 0xfe, 0xfc, 0x79, 0x5b,
	0x15, 0x56, 0xfa, 0x07, 0x3d, 0xcb, 0x0a, 0x87, 0x84, 0xa2, 0xae, 0x0a, 0xdb, 0xdd, 0x35, 0x88,
	0x66, 0x0a, 0xb2, 0xfc, 0xa6, 0xf2, 0x1c, 0x49, 0x91, 0xc5, 0xdc, 0x57, 0x27, 0xe9, 0x80, 0x47,
	0x3d, 0xc4, 0x89, 0x85, 0x3e, 0xdc, 0x8a, 0x0e, 0x6f, 0xea, 0x00, 0x31, 0xdb, 0x63, 0xfb, 0x51,
	0x7f, 0x49, 0x62, 0x87, 0x37, 0x08, 0x27, 0x90, 0xc7, 0xb5, 0xb0, 0xae, 0x40, 0xc4, 0x7c, 0x43,
	0x69, 0x8d, 0xf3, 0x9c, 0xe2, 0x7a, 0xd8, 0xaf, 0x30, 0xbd, 0xfc, 0x91, 0x7a, 0x21, 0xf8, 0x7f,
	0x8d, 0xa3, 0x4a, 0xd9, 0xe8, 0x87, 0xb9, 0xfc, 0x75, 0x06, 0xde, 0x2b, 0x03, 0x4b, 0xe5, 0x0a,
	0xcb, 0xeb, 0x91, 0x22, 0xb5, 0x34, 0x86, 0xf9, 0xe8, 0x99, 0xf1, 0x56, 0x99, 0x6a, 0x00, 0xee,
	0xce, 0x6a, 0x10, 0x3d, 0x1e, 0x0d, 0x80, 0xaa, 0x17, 0x44, 0x3b, 0x53, 0x85, 0xcd, 0xd6, 0x19,
	0xba, 0xbf, 0xd9, 0xa7, 0x9d, 0xc7, 0xf7, 0xaf, 0xa7, 0xda, 0x56, 0xda, 0x92, 0x55, 0x18, 0xe9,
	0x81, 0x4e, 0xd8, 0x81, 0x38, 0xe3, 0xd1, 0xc5, 0x9f, 0x25, 0xdb, 0x41, 0xb2, 0x29, 0xd6, 0x12,
	0x03, 0x74, 0x7e, 0xfa, 0xba, 0x48, 0xd8, 0xdb, 0x22, 0x61, 0x1f, 0x8b, 0x84, 0xbd, 0x7c, 0x26,
	0xff, 0xae, 0x0e, 0x8d, 0xa5, 0x9b, 0xf9, 0x30, 0xd3, 0x38, 0x93, 0x0e, 0xd4, 0xf4, 0xde, 0x11,
	0x8e, 0xc7, 0xd2, 0x81, 0xa7, 0x6b, 0xe3, 0x0a, 0x1d, 0xba, 0x91, 0xab, 0x92, 0x86, 0xcd, 0x50,
	0xc1, 0xf1, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x36, 0x0a, 0x67, 0xb7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SycmServiceClient is the client API for SycmService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SycmServiceClient interface {
	SetCookie(ctx context.Context, in *CookieReq, opts ...grpc.CallOption) (*CookieRes, error)
	GetCookie(ctx context.Context, in *CookieReq, opts ...grpc.CallOption) (*CookieRes, error)
}

type sycmServiceClient struct {
	cc *grpc.ClientConn
}

func NewSycmServiceClient(cc *grpc.ClientConn) SycmServiceClient {
	return &sycmServiceClient{cc}
}

func (c *sycmServiceClient) SetCookie(ctx context.Context, in *CookieReq, opts ...grpc.CallOption) (*CookieRes, error) {
	out := new(CookieRes)
	err := c.cc.Invoke(ctx, "/api.sycmService/SetCookie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sycmServiceClient) GetCookie(ctx context.Context, in *CookieReq, opts ...grpc.CallOption) (*CookieRes, error) {
	out := new(CookieRes)
	err := c.cc.Invoke(ctx, "/api.sycmService/GetCookie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SycmServiceServer is the server API for SycmService service.
type SycmServiceServer interface {
	SetCookie(context.Context, *CookieReq) (*CookieRes, error)
	GetCookie(context.Context, *CookieReq) (*CookieRes, error)
}

// UnimplementedSycmServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSycmServiceServer struct {
}

func (*UnimplementedSycmServiceServer) SetCookie(ctx context.Context, req *CookieReq) (*CookieRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCookie not implemented")
}
func (*UnimplementedSycmServiceServer) GetCookie(ctx context.Context, req *CookieReq) (*CookieRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCookie not implemented")
}

func RegisterSycmServiceServer(s *grpc.Server, srv SycmServiceServer) {
	s.RegisterService(&_SycmService_serviceDesc, srv)
}

func _SycmService_SetCookie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CookieReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SycmServiceServer).SetCookie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.sycmService/SetCookie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SycmServiceServer).SetCookie(ctx, req.(*CookieReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SycmService_GetCookie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CookieReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SycmServiceServer).GetCookie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.sycmService/GetCookie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SycmServiceServer).GetCookie(ctx, req.(*CookieReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SycmService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.sycmService",
	HandlerType: (*SycmServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetCookie",
			Handler:    _SycmService_SetCookie_Handler,
		},
		{
			MethodName: "GetCookie",
			Handler:    _SycmService_GetCookie_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/sycm.proto",
}

func (m *CookieReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CookieReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CookieReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintSycm(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSycm(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cookie) > 0 {
		i -= len(m.Cookie)
		copy(dAtA[i:], m.Cookie)
		i = encodeVarintSycm(dAtA, i, uint64(len(m.Cookie)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CookieRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CookieRes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CookieRes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSycm(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSycm(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintSycm(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSycm(dAtA []byte, offset int, v uint64) int {
	offset -= sovSycm(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CookieReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cookie)
	if l > 0 {
		n += 1 + l + sovSycm(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSycm(uint64(l))
	}
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovSycm(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CookieRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovSycm(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSycm(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSycm(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSycm(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSycm(x uint64) (n int) {
	return sovSycm(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CookieReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSycm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CookieReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CookieReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cookie", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSycm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSycm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cookie = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSycm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSycm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSycm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSycm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSycm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSycm
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSycm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CookieRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSycm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CookieRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CookieRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSycm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSycm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSycm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSycm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSycm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSycm
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSycm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSycm(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSycm
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSycm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSycm
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSycm
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSycm
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSycm        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSycm          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSycm = fmt.Errorf("proto: unexpected end of group")
)
